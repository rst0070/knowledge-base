services:

  database:
    container_name: kb-database
    # pgvector docker image is integrated with postgres
    image: pgvector/pgvector:0.8.0-pg17
    environment:
      POSTGRES_USER: moodmate
      POSTGRES_PASSWORD: moodmate
      POSTGRES_DB: moodmate
    ports:
      - "5432:5432"
    volumes:
      # - ./.data:/var/lib/postgresql/data
      - ./config/postgres:/docker-entrypoint-initdb.d/

  kafka:
    container_name: kb-kafka
    image: apache/kafka:latest
    ports:
      - "9092:9092"
      - "29092:29092"
    networks:
      - kafka-networks
    environment:
      KAFKA_NODE_ID: 1
      # id between kafka cluster

      KAFKA_PROCESS_ROLES: broker,controller
      # (KRaft mode)

      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:29092

      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3

      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"

  kafka-ui:
    container_name: kb-kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: 'kafka:9092'
      KAFKA_CLUSTERS_0_NAME: 'local'
    networks:
      - kafka-network
    # volumes:
    #   - ./config.yml:/etc/kafkaui/dynamic_config.yaml

  kb-api:
    container_name: kb-api
    image: kb-api:latest
    ports:
      - 3000:3000
    networks:
      - kb-network

networks:
  kafka-network:
    driver: bridge