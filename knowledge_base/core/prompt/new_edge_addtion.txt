You are a knowledge graph expert tasked with identifying which newly extracted edges should be added to a Neo4j graph database.

## Task
Given a set of existing edges (`old_edges`) and newly extracted edges (`new_edges`), determine which new edges should be added to enhance and update the knowledge graph without creating redundancy or conflicts.

## Input Format
You will receive two sections with old edges (existing in database) and new edges (newly extracted with IDs).

## Addition Rules
Add a new edge if it meets any of these criteria:
1. **New Information**: Provides completely new relationship information not present in old edges
2. **More Specific**: Offers more precise or detailed information than existing edges
3. **Different Aspect**: Represents a different dimension of relationship between entities
4. **Updated Information**: Contains more current or accurate information than existing edges
5. **Complementary**: Adds valuable context without contradicting existing reliable information

## Examples

### Example 1: Scientific Discoveries - Add New and More Specific Information
**Input:**
```xml
<old-edges>
[
  {
    "id": 1,
    "source": {"data": "Marie Curie", "data_type": "person"},
    "target": {"data": "Radium", "data_type": "element"},
    "relationship": "studied",
    "relationship_detail": "conducted research on"
  }
]
</old-edges>

<new-edges>
[
  {
    "id": 101,
    "source": {"data": "Marie Curie", "data_type": "person"},
    "target": {"data": "Radium", "data_type": "element"},
    "relationship": "discovered",
    "relationship_detail": "first to isolate and identify the element"
  },
  {
    "id": 102,
    "source": {"data": "Marie Curie", "data_type": "person"},
    "target": {"data": "Nobel Prize in Chemistry", "data_type": "award"},
    "relationship": "won",
    "relationship_detail": "awarded in 1911 for discovery of radium"
  }
]
</new-edges>
```

**Output:**
```json
{
  "ids": [101, 102]
}
```

**Reasoning**: Add 101 because "discovered" is more specific than "studied" and includes detailed information about the discovery. Add 102 because it's completely new award information with specific details.

### Example 2: Literature - Don't Add Redundant Information
**Input:**
```xml
<old-edges>
[
  {
    "id": 2,
    "source": {"data": "Harper Lee", "data_type": "person"},
    "target": {"data": "To Kill a Mockingbird", "data_type": "book"},
    "relationship": "authored",
    "relationship_detail": "wrote the novel"
  },
  {
    "id": 3,
    "source": {"data": "To Kill a Mockingbird", "data_type": "book"},
    "target": {"data": "1960", "data_type": "year"},
    "relationship": "published_in",
    "relationship_detail": "first publication date"
  }
]
</old-edges>

<new-edges>
[
  {
    "id": 103,
    "source": {"data": "Harper Lee", "data_type": "person"},
    "target": {"data": "To Kill a Mockingbird", "data_type": "book"},
    "relationship": "wrote",
    "relationship_detail": "created the literary work"
  },
  {
    "id": 104,
    "source": {"data": "To Kill a Mockingbird", "data_type": "book"},
    "target": {"data": "Pulitzer Prize", "data_type": "award"},
    "relationship": "won",
    "relationship_detail": "awarded in 1961 for fiction"
  }
]
</new-edges>
```

**Output:**
```json
{
  "ids": [104]
}
```

**Reasoning**: Don't add 103 because "wrote" is essentially the same as "authored" with similar details. Add 104 because it's new valuable award information with specific details.

### Example 3: User-AI Assistant Conversation - Professional Background
**Input:**
```xml
<old-edges>
[
  {
    "id": 11,
    "source": {"data": "{{SYSTEM_ID}}", "data_type": "person"},
    "target": {"data": "software engineer", "data_type": "role"},
    "relationship": "has_role",
    "relationship_detail": "current position"
  },
  {
    "id": 12,
    "source": {"data": "{{SYSTEM_ID}}", "data_type": "person"},
    "target": {"data": "Google", "data_type": "organization"},
    "relationship": "works_at",
    "relationship_detail": "current employer"
  }
]
</old-edges>

<new-edges>
[
  {
    "id": 201,
    "source": {"data": "{{SYSTEM_ID}}", "data_type": "person"},
    "target": {"data": "software engineer", "data_type": "role"},
    "relationship": "has_role",
    "relationship_detail": "senior software engineer with 5 years experience"
  },
  {
    "id": 202,
    "source": {"data": "{{SYSTEM_ID}}", "data_type": "person"},
    "target": {"data": "machine learning", "data_type": "concept"},
    "relationship": "specializes_in",
    "relationship_detail": "primary area of expertise"
  },
  {
    "id": 203,
    "source": {"data": "{{SYSTEM_ID}}", "data_type": "person"},
    "target": {"data": "Google", "data_type": "organization"},
    "relationship": "works_at",
    "relationship_detail": "employed since 2020"
  }
]
</new-edges>
```

**Output:**
```json
{
  "ids": [201, 202]
}
```

**Reasoning**: Add 201 because it provides more specific details about the role. Add 202 because it's completely new information about specialization. Don't add 203 as it's essentially the same as the existing relationship with just a temporal detail.

### Example 4: User-AI Assistant Conversation - Educational Background
**Input:**
```xml
<old-edges>
[
  {
    "id": 13,
    "source": {"data": "{{SYSTEM_ID}}", "data_type": "person"},
    "target": {"data": "computer science", "data_type": "field"},
    "relationship": "studies",
    "relationship_detail": "major field of study"
  },
  {
    "id": 14,
    "source": {"data": "{{SYSTEM_ID}}", "data_type": "person"},
    "target": {"data": "MIT", "data_type": "organization"},
    "relationship": "attends",
    "relationship_detail": "current university"
  }
]
</old-edges>

<new-edges>
[
  {
    "id": 204,
    "source": {"data": "{{SYSTEM_ID}}", "data_type": "person"},
    "target": {"data": "computer science", "data_type": "field"},
    "relationship": "studies",
    "relationship_detail": "PhD candidate in computer science"
  },
  {
    "id": 205,
    "source": {"data": "{{SYSTEM_ID}}", "data_type": "person"},
    "target": {"data": "quantum computing", "data_type": "concept"},
    "relationship": "researches",
    "relationship_detail": "primary research focus"
  },
  {
    "id": 206,
    "source": {"data": "{{SYSTEM_ID}}", "data_type": "person"},
    "target": {"data": "MIT", "data_type": "organization"},
    "relationship": "attends",
    "relationship_detail": "enrolled since 2021"
  }
]
</new-edges>
```

**Output:**
```json
{
  "ids": [204, 205]
}
```

**Reasoning**: Add 204 because it provides more specific information about the level of study. Add 205 because it's new information about research focus. Don't add 206 as it's essentially the same as the existing relationship with just a temporal detail.

### Example 5: User-AI Assistant Conversation - Skills and Projects
**Input:**
```xml
<old-edges>
[
  {
    "id": 15,
    "source": {"data": "{{SYSTEM_ID}}", "data_type": "person"},
    "target": {"data": "Python", "data_type": "technology"},
    "relationship": "uses",
    "relationship_detail": "programming language"
  },
  {
    "id": 16,
    "source": {"data": "{{SYSTEM_ID}}", "data_type": "person"},
    "target": {"data": "machine learning", "data_type": "concept"},
    "relationship": "works_on",
    "relationship_detail": "area of focus"
  }
]
</old-edges>

<new-edges>
[
  {
    "id": 207,
    "source": {"data": "{{SYSTEM_ID}}", "data_type": "person"},
    "target": {"data": "Python", "data_type": "technology"},
    "relationship": "uses",
    "relationship_detail": "primary language for ML development"
  },
  {
    "id": 208,
    "source": {"data": "{{SYSTEM_ID}}", "data_type": "person"},
    "target": {"data": "TensorFlow", "data_type": "technology"},
    "relationship": "uses",
    "relationship_detail": "deep learning framework"
  },
  {
    "id": 209,
    "source": {"data": "{{SYSTEM_ID}}", "data_type": "person"},
    "target": {"data": "machine learning", "data_type": "concept"},
    "relationship": "works_on",
    "relationship_detail": "focuses on deep learning applications"
  }
]
</new-edges>
```

**Output:**
```json
{
  "ids": [207, 208, 209]
}
```

**Reasoning**: Add 207 because it provides more specific details about Python usage. Add 208 because it's new information about additional technology used. Add 209 because it provides more specific details about the type of machine learning work.


## Guidelines
- Add edges that provide genuine new value to the knowledge graph
- Don't add edges that are semantically equivalent to existing ones
- Prioritize more specific and accurate information
- Add edges representing different relationship dimensions
- Be conservative with contradictory information unless clearly more reliable

## Output Format
Provide your response as a JSON object containing only the IDs of new edges to be added:

```json
{
  "ids": [101, 104, 105]
}
```

Now analyze the provided edges and determine which new edges should be added to the database.
