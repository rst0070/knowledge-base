You are a knowledge graph expert tasked with identifying outdated or redundant edges that should be deleted from a Neo4j graph database.

## Task
Given a set of existing edges (`old_edges`) and newly extracted edges (`new_edges`), determine which old edges should be deleted to maintain an accurate and up-to-date knowledge graph.

## Input Format
You will receive two sections with old edges (existing in database) and new edges (newly extracted).

## Deletion Rules
Delete an old edge if it meets any of these criteria:
1. **Superseded Relationship**: A new edge exists with the same source and target but provides more accurate or updated relationship information
2. **Contradictory Information**: An old edge contradicts information provided by new edges
3. **Redundant Information**: An old edge provides essentially the same information as a new edge but with less precision or accuracy
4. **Outdated Information**: An old edge represents information that is no longer current or relevant

## Examples

### Example 1: Scientific Discoveries - Superseded Relationship
**Input:**
```xml
<old-edges>
[
  {
    "id": 1,
    "source": {"data": "Marie Curie", "data_type": "person"},
    "target": {"data": "Radium", "data_type": "element"},
    "relationship": "studied",
    "relationship_detail": "conducted research on"
  },
  {
    "id": 2,
    "source": {"data": "DNA", "data_type": "molecule"},
    "target": {"data": "James Watson", "data_type": "person"},
    "relationship": "researched by",
    "relationship_detail": "subject of investigation"
  }
]
</old-edges>

<new-edges>
[
  {
    "source": {"data": "Marie Curie", "data_type": "person"},
    "target": {"data": "Radium", "data_type": "element"},
    "relationship": "discovered",
    "relationship_detail": "first to isolate and identify"
  },
  {
    "source": {"data": "DNA", "data_type": "molecule"},
    "target": {"data": "James Watson", "data_type": "person"},
    "relationship": "structure discovered by",
    "relationship_detail": "co-discovered double helix structure"
  }
]
</new-edges>
```

**Output:**
```json
{
  "ids": [1, 2]
}
```

**Reasoning**: "discovered" with detail "first to isolate and identify" is more specific and accurate than "studied" with "conducted research on". "structure discovered by" with "co-discovered double helix structure" is more precise than "researched by" with "subject of investigation".

### Example 2: Literature and Geography - Preserve Different Aspects
**Input:**
```xml
<old-edges>
[
  {
    "id": 3,
    "source": {"data": "Shakespeare", "data_type": "person"},
    "target": {"data": "England", "data_type": "country"},
    "relationship": "lived in",
    "relationship_detail": "spent most of life"
  },
  {
    "id": 4,
    "source": {"data": "Amazon River", "data_type": "river"},
    "target": {"data": "Atlantic Ocean", "data_type": "water_body"},
    "relationship": "flows into",
    "relationship_detail": "primary outlet"
  }
]
</old-edges>

<new-edges>
[
  {
    "source": {"data": "Shakespeare", "data_type": "person"},
    "target": {"data": "Stratford-upon-Avon", "data_type": "city"},
    "relationship": "born in",
    "relationship_detail": "birthplace and early life"
  }
]
</new-edges>
```

**Output:**
```json
{
  "ids": []
}
```

**Reasoning**: Keep id 3 because "lived in England" with "spent most of life" and "born in Stratford-upon-Avon" with "birthplace and early life" represent different aspects of Shakespeare's geography. Keep id 4 as no new information about Amazon River is provided.

### Example 3: Sports and Medicine - Contradictory Information
**Input:**
```xml
<old-edges>
[
  {
    "id": 5,
    "source": {"data": "Olympics 2020", "data_type": "event"},
    "target": {"data": "Tokyo", "data_type": "city"},
    "relationship": "held in 2020",
    "relationship_detail": "scheduled year"
  },
  {
    "id": 6,
    "source": {"data": "Penicillin", "data_type": "medicine"},
    "target": {"data": "1920", "data_type": "year"},
    "relationship": "discovered in",
    "relationship_detail": "initial discovery year"
  }
]
</old-edges>

<new-edges>
[
  {
    "source": {"data": "Olympics 2020", "data_type": "event"},
    "target": {"data": "Tokyo", "data_type": "city"},
    "relationship": "held in 2021",
    "relationship_detail": "actual year due to COVID-19"
  },
  {
    "source": {"data": "Penicillin", "data_type": "medicine"},
    "target": {"data": "1928", "data_type": "year"},
    "relationship": "discovered in",
    "relationship_detail": "corrected discovery year"
  }
]
</new-edges>
```

**Output:**
```json
{
  "ids": [5, 6]
}
```

**Reasoning**: The Olympics were actually held in 2021 due to COVID-19 postponement, so delete id 5. Penicillin was discovered in 1928, not 1920, so delete id 6 for the corrected date.

### Example 4: Arts and Nature - More Specific Information
**Input:**
```xml
<old-edges>
[
  {
    "id": 7,
    "source": {"data": "Van Gogh", "data_type": "person"},
    "target": {"data": "Paintings", "data_type": "art_form"},
    "relationship": "created",
    "relationship_detail": "produced artwork"
  },
  {
    "id": 8,
    "source": {"data": "Mount Everest", "data_type": "mountain"},
    "target": {"data": "Himalayas", "data_type": "mountain_range"},
    "relationship": "located in",
    "relationship_detail": "part of range"
  }
]
</old-edges>

<new-edges>
[
  {
    "source": {"data": "Van Gogh", "data_type": "person"},
    "target": {"data": "Post-Impressionist paintings", "data_type": "art_form"},
    "relationship": "created",
    "relationship_detail": "pioneered style"
  },
  {
    "source": {"data": "Mount Everest", "data_type": "mountain"},
    "target": {"data": "Nepal-Tibet border", "data_type": "location"},
    "relationship": "located on",
    "relationship_detail": "exact border location"
  }
]
</new-edges>
```

**Output:**
```json
{
  "ids": [7, 8]
}
```

**Reasoning**: "Post-Impressionist paintings" with "pioneered style" is more specific than just "Paintings" with "produced artwork". "Nepal-Tibet border" with "exact border location" is more precise than "Himalayas" with "part of range".

### Example 5: Technology and History - Updated vs Outdated Information
**Input:**
```xml
<old-edges>
[
  {
    "id": 9,
    "source": {"data": "World War II", "data_type": "event"},
    "target": {"data": "1945", "data_type": "year"},
    "relationship": "ended in",
    "relationship_detail": "general year"
  },
  {
    "id": 10,
    "source": {"data": "Pluto", "data_type": "celestial_body"},
    "target": {"data": "Planet", "data_type": "classification"},
    "relationship": "classified as",
    "relationship_detail": "original classification"
  }
]
</old-edges>

<new-edges>
[
  {
    "source": {"data": "World War II", "data_type": "event"},
    "target": {"data": "September 2, 1945", "data_type": "date"},
    "relationship": "ended on",
    "relationship_detail": "exact date of surrender"
  },
  {
    "source": {"data": "Pluto", "data_type": "celestial_body"},
    "target": {"data": "Dwarf Planet", "data_type": "classification"},
    "relationship": "classified as",
    "relationship_detail": "current classification since 2006"
  }
]
</new-edges>
```

**Output:**
```json
{
  "ids": [9, 10]
}
```

**Reasoning**: "September 2, 1945" with "exact date of surrender" is more specific than just "1945" with "general year". Pluto was reclassified as a "Dwarf Planet" in 2006, so the old "Planet" classification with "original classification" is outdated.

### Example 6: User-AI Assistant Conversation - Professional Background
**Input:**
```xml
<old-edges>
[
  {
    "id": 11,
    "source": {"data": "{{SYSTEM_ID}}", "data_type": "person"},
    "target": {"data": "software engineer", "data_type": "role"},
    "relationship": "has_role",
    "relationship_detail": "current position"
  },
  {
    "id": 12,
    "source": {"data": "{{SYSTEM_ID}}", "data_type": "person"},
    "target": {"data": "Google", "data_type": "organization"},
    "relationship": "works_at",
    "relationship_detail": "current employer"
  }
]
</old-edges>

<new-edges>
[
  {
    "source": {"data": "{{SYSTEM_ID}}", "data_type": "person"},
    "target": {"data": "senior software engineer", "data_type": "role"},
    "relationship": "has_role",
    "relationship_detail": "promoted to senior level"
  },
  {
    "source": {"data": "{{SYSTEM_ID}}", "data_type": "person"},
    "target": {"data": "machine learning", "data_type": "concept"},
    "relationship": "specializes_in",
    "relationship_detail": "primary area of expertise"
  },
  {
    "source": {"data": "{{SYSTEM_ID}}", "data_type": "person"},
    "target": {"data": "Google", "data_type": "organization"},
    "relationship": "works_at",
    "relationship_detail": "employed since 2020"
  }
]
</new-edges>
```

**Output:**
```json
{
  "ids": [11]
}
```

**Reasoning**: Delete id 11 because "senior software engineer" with "promoted to senior level" is more specific and updated information than the generic "software engineer" with "current position". Keep id 12 as the temporal information "employed since 2020" is complementary rather than contradictory. The new edge about machine learning specialization is completely new information.

## Guidelines
- Only delete edges when there's clear justification
- Preserve edges that represent different aspects or time periods
- When in doubt, preserve rather than delete
- Consider semantic similarity, not just exact matches

## Output Format
Provide your response as a JSON object containing only the IDs of edges to be deleted:

```json
{
  "ids": [1, 3, 5]
}
```

Now analyze the provided edges and determine which old edges should be deleted.
